import Head from 'next/head'
import Image from 'next/image'
import React, { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { toast } from 'react-toastify'
import Picture from './picture'
import { pushRequest } from './api/apiUtils'
// import cookieCutter from 'cookie-cutter'

const notify = (txt) => toast(txt)

/** @typedef {import('./type/userInfo').UserInfo} UserInfo */
/** @type {UserInfo} */
let localUser

/**
 * @type {{ [key:string]: React.CSSProperties }}
 */
const jsxStyles = {
  mainDiv: {
    border: 'solid',
    borderColor: 'green',
    backgroundColor: 'grey',
    borderRadius: '2rem',
    display: 'flex',
    flexDirection: 'column',
    minHeight: '60vh',
    minWidth: '40vw',
    alignItems: 'center',
    justifyContent: 'space-evenly'
  },
  pictureNameTopRow: {
    fontSize: '5vh',
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
  },
  profilePicture: {
    borderRadius: '100vh',
    width: '20vh',
    marginRight: '15px',
    position: 'static',
    left: '30%',
  },
  biography: {
    border: 'solid',
    borderColor: 'white',
    backgroundColor: '#ffffff90',
    borderRadius: '2vmin',
    padding: '10px',
    inlineSize: '30vw',
    overflow: 'hidden',
  },
  base: {
    borderRadius:'2vh',
    borderWidth:'0.1vh',
    textAlign:'center',
    paddingInline: '1vmax'
  },
  input: {
    paddingInline: '1vh'
  },
  button: {
    color:'#cacaca',
    padding: '10%'
  }
}


const pushUpdate = async (event, userTag) => {
  if (event.key == 'Enter')
    return null
  console.log(event)
  event.preventDefault()
  const { bio, gender, age, search_female, search_other, search_male } = event.target
  // notify(bio.value)
  // notify(search_male.value)
  const data = new FormData()
  if (gender && localUser.gender != gender?.value)
    data.append("gender", gender?.value)
  if (age && localUser.age != age?.value)
    data.append("age", age?.value)
  if (search_male && localUser.search_male != search_male?.value)
    data.append("search_male", search_male?.value)
  if (search_female && localUser.search_female != search_female?.value)
    data.append("search_female", search_female?.value)
  if (search_other && localUser.search_other != search_other?.value)
    data.append("search_other", search_other?.value)
  if (bio && localUser.short_bio !== bio?.value)
    data.append("short_bio", bio?.value)
  // if (userTag?.length)
  //   data.append("tags", userTag)
  await pushRequest('user/', 'PUT', data)
  // window.location.href = '/profile'
}

export default function UpdateProfile() {

  /** @type {import('./type/userInfo').UserInfo} */
  const userbase = {}
  /** @type {[UserInfo, import('react').Dispatch<import('react').SetStateAction<{}>>]} */
  const [user, setUser] = useState(userbase)
  const [tags, setTags] = useState([])
  const [userTags, setUserTags] = useState([])
  if (typeof window === "undefined") {
    //bypass ssr
    return null
  } else {
    useEffect( () => {
      pushRequest('user/', 'GET')
        .then((data) => {
          if (String(data?.picture).search('undefined/') != -1){
            data.picture = data.picture.replace('undefined/', '')
            data.picture = `data:image/jpeg;base64,${data.picture}`
            console.log('shuush', data.picture)
          }
          setUser(data)
          localUser = data
          localStorage.removeItem("userInfo")
          localStorage.setItem("userInfo", JSON.stringify(user))
        })
        .catch((reason) => console.error(reason))
      pushRequest('tag/', 'GET')
        .then((data) => {
          setTags(data)
        })
        .catch((reason) => console.error(reason))
      // pushRequest('user/tags/', 'GET')
      //   .then((data) => {
      //     setUserTags(data)
      //   })
      //   .catch((reason) => console.error(reason))
    }, [])
    console.log('user', user)
    if (!user){
      localStorage.removeItem("userInfo")
      window.location.href = '/profile'
    } else {
      console.log(user.short_bio)
    }
    return (
      <div className={styles.container}>
        <Head>
          <title>Pokélove</title>
          <meta name="description" content="Generated by a lot of redbull" />
          <link rel="icon" href="/logo.png" />
        </Head>
        <form className={styles.main}
          // onSubmit={(event) => pushUpdate(event, userTags)}
          id='uno'
        >
          <div style={jsxStyles.mainDiv}>
            <div style={jsxStyles.pictureNameTopRow}>
              <Picture main={true} user={user}/>
            </div>
            <textarea form='uno' id='bio' maxLength={280} rows={6} style={{resize: 'none', ...jsxStyles.biography, ...((!user.short_bio) ? {color: 'grey'} : {color:'inherit'})}}
              placeholder={user.short_bio ??= 'écrire une description ...'}
              onBlur={(event) => {
                if (event.target.value.length === 0)
                  event.target.value = user.short_bio || 'écrire une description ...'
              }}
            />
            Je suis:
            <select id='gender' defaultValue={user.gender}>
              <option value='male'>Homme</option>
              <option value='female'>Femme</option>
              <option value='other'>Other</option>
            </select>
            <div>
              {userTags?.map(val => <>{val}&nbsp;</>)}
              <input id='loul' type='text' list='tagsList' placeholder='Ekrivey vö sentre de loizir' size={25}
                onKeyPress={(event) => {
                  if (event.key == 'Enter')
                    if (userTags?.length)
                      setUserTags([...userTags, event.target.value])
                    else
                      setUserTags([event.target.value])
                }}
              />
              <datalist id='tagsList'>
                {tags.map((value) => {
                  return (
                    <option
                      id={"option"+value.name}
                      style={{color: value.color}}
                      value={value.name}
                    >
                      {value.name}
                    </option>
                  )
                })}
              </datalist>
            </div>
            <button
              id='magicButton'
              type='submit'
              className={styles.button}
              form='uno'
              style={{
                borderRadius:'2vh',
                borderWidth:'0.1vh',
                textAlign:'center',
                paddingInline: '1vmax',
                padding: '2vmin',
              }}
            >Sauvgarder</button>
            <div>
              other picture:
              <Picture/>
            </div>
          </div>
        </form>
      </div>
    )
  }
}
